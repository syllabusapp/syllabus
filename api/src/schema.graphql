### This file was autogenerated by Nexus 0.11.3
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

scalar DateTime

type Mutation {
  addProduct(name: String!, type: ProductTypeType!): StripeProductPayload!
  changePassword(newPassword: String!, oldPassword: String!): UserIdPayload!
  confirmAccount(email: String!, emailConfirmToken: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  resetPassword(email: String!, newPassword: String!, resetToken: String!): UserIdPayload!
  signup(data: SignUpInput!): AuthPayload!
  triggerAccountConfirmationEmail(email: String!): TriggerEmailPayload!
  triggerPasswordReset(email: String!): TriggerEmailPayload!
}

type Organization {
  createdAt: DateTime!
  name: String!
  updatedAt: DateTime!
  users(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]
}

input OrganizationWhereInput {
  AND: [OrganizationWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [OrganizationWhereInput!]
  OR: [OrganizationWhereInput!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  updatedBy: UserWhereInput
  users_every: UserWhereInput
  users_none: UserWhereInput
  users_some: UserWhereInput
}

type Plan {
  amount: Int
  createdAt: DateTime!
  nickname: String!
  product: Product!
  updatedAt: DateTime!
}

input PlanWhereInput {
  amount: Int
  amount_gt: Int
  amount_gte: Int
  amount_in: [Int!]
  amount_lt: Int
  amount_lte: Int
  amount_not: Int
  amount_not_in: [Int!]
  AND: [PlanWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  nickname: String
  nickname_contains: String
  nickname_ends_with: String
  nickname_gt: String
  nickname_gte: String
  nickname_in: [String!]
  nickname_lt: String
  nickname_lte: String
  nickname_not: String
  nickname_not_contains: String
  nickname_not_ends_with: String
  nickname_not_in: [String!]
  nickname_not_starts_with: String
  nickname_starts_with: String
  NOT: [PlanWhereInput!]
  OR: [PlanWhereInput!]
  product: ProductWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  updatedBy: UserWhereInput
}

type Product {
  createdAt: DateTime!
  name: String!
  stripeId: ID!
  type: ProductTypeType!
  updatedAt: DateTime!
}

enum ProductTypeType {
  Good
  Service
}

input ProductWhereInput {
  AND: [ProductWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [ProductWhereInput!]
  OR: [ProductWhereInput!]
  stripeId: ID
  stripeId_contains: ID
  stripeId_ends_with: ID
  stripeId_gt: ID
  stripeId_gte: ID
  stripeId_in: [ID!]
  stripeId_lt: ID
  stripeId_lte: ID
  stripeId_not: ID
  stripeId_not_contains: ID
  stripeId_not_ends_with: ID
  stripeId_not_in: [ID!]
  stripeId_not_starts_with: ID
  stripeId_starts_with: ID
  type: ProductTypeType
  type_in: [ProductTypeType!]
  type_not: ProductTypeType
  type_not_in: [ProductTypeType!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  updatedBy: UserWhereInput
}

type Query {
  currentUser: User!
  helloWorld(name: String!): String!
}

type Role {
  createdAt: DateTime!
  name: String!
  updatedAt: DateTime!
}

enum RoleOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input RoleWhereInput {
  AND: [RoleWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  updatedBy: UserWhereInput
}

type Setting {
  createdAt: DateTime!
  isGDPR: Boolean
  key: String!
  label: String!
  lastUpdatedByUser: DateTime
  type: SettingTypeType!
  updatedAt: DateTime!
  value: Boolean
}

enum SettingOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  isGDPR_ASC
  isGDPR_DESC
  key_ASC
  key_DESC
  label_ASC
  label_DESC
  lastUpdatedByUser_ASC
  lastUpdatedByUser_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
  value_ASC
  value_DESC
}

enum SettingTypeType {
  Boolean
  Number
  String
}

input SettingWhereInput {
  AND: [SettingWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  isGDPR: Boolean
  isGDPR_not: Boolean
  key: String
  key_contains: String
  key_ends_with: String
  key_gt: String
  key_gte: String
  key_in: [String!]
  key_lt: String
  key_lte: String
  key_not: String
  key_not_contains: String
  key_not_ends_with: String
  key_not_in: [String!]
  key_not_starts_with: String
  key_starts_with: String
  label: String
  label_contains: String
  label_ends_with: String
  label_gt: String
  label_gte: String
  label_in: [String!]
  label_lt: String
  label_lte: String
  label_not: String
  label_not_contains: String
  label_not_ends_with: String
  label_not_in: [String!]
  label_not_starts_with: String
  label_starts_with: String
  lastUpdatedByUser: DateTime
  lastUpdatedByUser_gt: DateTime
  lastUpdatedByUser_gte: DateTime
  lastUpdatedByUser_in: [DateTime!]
  lastUpdatedByUser_lt: DateTime
  lastUpdatedByUser_lte: DateTime
  lastUpdatedByUser_not: DateTime
  lastUpdatedByUser_not_in: [DateTime!]
  NOT: [SettingWhereInput!]
  OR: [SettingWhereInput!]
  type: SettingTypeType
  type_in: [SettingTypeType!]
  type_not: SettingTypeType
  type_not_in: [SettingTypeType!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  updatedBy: UserWhereInput
  value: Boolean
  value_not: Boolean
}

input SignUpInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

type StripeProductPayload {
  name: String!
  stripeId: ID!
  type: ProductTypeType!
}

type StripeSubscription {
  createdAt: DateTime!
  customer: User!
  plan: Plan!
  quantity: Int
  updatedAt: DateTime!
}

input StripeSubscriptionWhereInput {
  AND: [StripeSubscriptionWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  customer: UserWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [StripeSubscriptionWhereInput!]
  OR: [StripeSubscriptionWhereInput!]
  plan: PlanWhereInput
  quantity: Int
  quantity_gt: Int
  quantity_gte: Int
  quantity_in: [Int!]
  quantity_lt: Int
  quantity_lte: Int
  quantity_not: Int
  quantity_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  updatedBy: UserWhereInput
}

type TriggerEmailPayload {
  ok: Boolean!
}

type User {
  createdAt: DateTime!
  email: String!
  emailConfirmed: Boolean!
  firstName: String!
  lastName: String!
  organization: Organization!
  roles(after: String, before: String, first: Int, last: Int, orderBy: RoleOrderByInput, skip: Int, where: RoleWhereInput): [Role!]
  settings(after: String, before: String, first: Int, last: Int, orderBy: SettingOrderByInput, skip: Int, where: SettingWhereInput): [Setting!]
  subscription: StripeSubscription
  updatedAt: DateTime!
}

type UserIdPayload {
  id: String!
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  deletedAt_ASC
  deletedAt_DESC
  email_ASC
  email_DESC
  emailConfirmed_ASC
  emailConfirmed_DESC
  emailConfirmToken_ASC
  emailConfirmToken_DESC
  firstName_ASC
  firstName_DESC
  id_ASC
  id_DESC
  lastLogin_ASC
  lastLogin_DESC
  lastName_ASC
  lastName_DESC
  password_ASC
  password_DESC
  resetExpires_ASC
  resetExpires_DESC
  resetToken_ASC
  resetToken_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserUpdateInput {
  email: String!
  firstName: String!
  lastName: String!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  createdBy: UserWhereInput
  deletedAt: DateTime
  deletedAt_gt: DateTime
  deletedAt_gte: DateTime
  deletedAt_in: [DateTime!]
  deletedAt_lt: DateTime
  deletedAt_lte: DateTime
  deletedAt_not: DateTime
  deletedAt_not_in: [DateTime!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  emailConfirmed: Boolean
  emailConfirmed_not: Boolean
  emailConfirmToken: String
  emailConfirmToken_contains: String
  emailConfirmToken_ends_with: String
  emailConfirmToken_gt: String
  emailConfirmToken_gte: String
  emailConfirmToken_in: [String!]
  emailConfirmToken_lt: String
  emailConfirmToken_lte: String
  emailConfirmToken_not: String
  emailConfirmToken_not_contains: String
  emailConfirmToken_not_ends_with: String
  emailConfirmToken_not_in: [String!]
  emailConfirmToken_not_starts_with: String
  emailConfirmToken_starts_with: String
  firstName: String
  firstName_contains: String
  firstName_ends_with: String
  firstName_gt: String
  firstName_gte: String
  firstName_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_not: String
  firstName_not_contains: String
  firstName_not_ends_with: String
  firstName_not_in: [String!]
  firstName_not_starts_with: String
  firstName_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  lastLogin: DateTime
  lastLogin_gt: DateTime
  lastLogin_gte: DateTime
  lastLogin_in: [DateTime!]
  lastLogin_lt: DateTime
  lastLogin_lte: DateTime
  lastLogin_not: DateTime
  lastLogin_not_in: [DateTime!]
  lastName: String
  lastName_contains: String
  lastName_ends_with: String
  lastName_gt: String
  lastName_gte: String
  lastName_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_not: String
  lastName_not_contains: String
  lastName_not_ends_with: String
  lastName_not_in: [String!]
  lastName_not_starts_with: String
  lastName_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  organization: OrganizationWhereInput
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  resetExpires: DateTime
  resetExpires_gt: DateTime
  resetExpires_gte: DateTime
  resetExpires_in: [DateTime!]
  resetExpires_lt: DateTime
  resetExpires_lte: DateTime
  resetExpires_not: DateTime
  resetExpires_not_in: [DateTime!]
  resetToken: String
  resetToken_contains: String
  resetToken_ends_with: String
  resetToken_gt: String
  resetToken_gte: String
  resetToken_in: [String!]
  resetToken_lt: String
  resetToken_lte: String
  resetToken_not: String
  resetToken_not_contains: String
  resetToken_not_ends_with: String
  resetToken_not_in: [String!]
  resetToken_not_starts_with: String
  resetToken_starts_with: String
  roles_every: RoleWhereInput
  roles_none: RoleWhereInput
  roles_some: RoleWhereInput
  settings_every: SettingWhereInput
  settings_none: SettingWhereInput
  settings_some: SettingWhereInput
  subscription: StripeSubscriptionWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  updatedBy: UserWhereInput
}
